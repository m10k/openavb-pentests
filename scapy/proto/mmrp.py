#!/usr/bin/env python

# mmrp.py - An MMRP implementation for scapy
# Copyright (C) 2016 Matthias Kruk
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.     

from scapy.all import *
from scapy.layers.l2 import Ether

class LenBitField(BitField):
    def __init__(self, name, default, bits, fld):
        BitField.__init__(self, name, default, bits)
        self.fld = fld

    def i2m(self, pkt, x):
        if x is None:
            f = pkt.get_field(self.fld)
            x = f.i2len(pkt, pkt.getfieldval(self.fld))
            x = x / 3
        return(str(x))

    def m2i(self, pkt, x):
        if s is None:
            return None, 0
        return int(x) * 3

    def addfield(self, pkt, s, val):
        return BitField.addfield(self, pkt, s, val)

    def getfield(self, pkt, s):
        return BitField.getfield(self, pkt, s)

class MMRP_VectorAttribute(Packet):
    name = "MMRP_VectorAttribute "
    fields_desc = [ BitField("LeaveAllEvent", None, 3),
#                   LenBitField("NumberOfValues", None, 13, "Attributes"),
                    BitFieldLenField("NumberOfValues", None, 13, length_of="Attributes", adjust=lambda pkt,x:x/3),
                    StrField("Attributes", "") ]
    
class MMRP_Attribute(Packet):
    name = "MMRP_Attribute "
    fields_desc = [ PacketListField("VectorAttribute", [], MMRP_VectorAttribute),
                    XShortField("EndMark", 0) ]

class MMRP_Message(Packet):
    name = "MMRP_Message "
    fields_desc = [ XByteField("AttributeType", None),
                    XByteField("AttributeLength", None),
#                   XShortField("AttributeListLength", None),
                    PacketListField("AttributeList", [], MMRP_Attribute) ]

class MMRP(Packet):
    name = "MMRP "
    fields_desc = [ XByteField("ProtocolVersion", 0),
                    PacketListField("Messages", [], MMRP_Message),
                    XShortField("EndMark", 0) ]

bind_layers(Ether, MMRP, {"type": 0x88F6, "dst": "01:80:C2:00:00:20"})
